plugins {
    id 'java-library'
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(16)
    }
}

def createVersion() {
    def parts = []

    if (project.release != 'RELEASE') {
        parts.push project.release
    }

    def branch = System.env.TRAVIS_BRANCH

    if (branch != null && branch != 'master' && !project.minecraft_version.startsWith(branch)) {
        parts.push branch
    }

    parts.push project.minecraft_version

    def ver = project.version
    if (parts.size > 0) {
      return ver + '-' + parts.join('-')
    }
    return ver
}

version = createVersion()
group = project.group
description = project.displayname
archivesBaseName = project.name

minecraft {
    refmapName = 'mson.mixin.refmap.json'
    accessWidener 'src/main/resources/mson.aw'
}

sourceSets {
    test {
       java {
           // gradle and/or loom pls
           exclude '*'
       }
   }
}

repositories {
    maven {
        name = 'modmenu'
        url = 'https://maven.terraformersmc.com/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modApi "net.fabricmc:fabric-loader:${project.loader_version}"

    modApi fabricApi.module("fabric-api-base", project.fabric_version)
    modApi fabricApi.module("fabric-events-lifecycle-v0", project.fabric_version)
    modApi fabricApi.module("fabric-resource-loader-v0", project.fabric_version)

    modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }

    from 'LICENSE'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            afterEvaluate {
                artifact(remapJar)
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }

            pom {
                name = "Mson"
                description = "Jsonify your Minecraft Models"
                url = "https://minelittlepony-mod.com"
                licenses {
                    license {
                        name = "MIT Public License"
                        url = "https://tlo.mit.edu/learn-about-intellectual-property/software-and-open-source-licensing"

                    }
                }
                developers {
                    developer {
                        id = "sollace"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/MineLittlePony/Mson.git'
                    developerConnection = 'scm:git:ssh://github.com/MineLittlePony/Mson.git'
                    url = 'https://github.com/MineLittlePony/Mson'
                }
            }
        }
    }

    repositories {
        maven {
            name = "MineLittlePony"
            def mvn = 's3://repo.minelittlepony-mod.com/maven'
            url = release == 'SNAPSHOT' ? "$mvn/snapshot" : "$mvn/release"

            credentials(AwsCredentials) {
                accessKey = System.env.ACCESS_KEY
                secretKey = System.env.SECRET_KEY
            }
        }
    }
}
